generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatutPaiement {
  ACQUITTE
  EN_ATTENTE
}

enum TypePaiement {
  ESPECE
  VIREMENT
  CHEQUE
}

// Table des types de familles
model TypeFamille {
  id       String    @id @default(uuid())
  nom      String    @unique
  familles Famille[]
}

// Table des familles
model Famille {
  id            String      @id  // Enlever @default(uuid())
  typeFamilleId String      
  type          TypeFamille @relation(fields: [typeFamilleId], references: [id])
  
  chefFamilleId String     @unique
  chefFamille   Membre     @relation(name: "FamilleRepresentant", fields: [chefFamilleId], references: [id])
  
  membres       Membre[]   @relation(name: "FamilleMembres")
  cotisation    Cotisation?
  adresse       String      @default("")
  adresseEmail  String      @default("")
  telephone     String      @default("")
}

model Membre {
  id             String   @id  // Enlever @default(uuid())
  nom            String
  prenom         String
  dateNaissance String
  familleId      String?  
  famille        Famille? @relation(name: "FamilleMembres", fields: [familleId], references: [id])
  representantDe Famille? @relation(name: "FamilleRepresentant")
}

// Table des cotisations
model Cotisation {
  id        String   @id @default(uuid())
  familleId String   @unique
  famille   Famille  @relation(fields: [familleId], references: [id])
  montant   Float
  facture   Facture?
}

// Table des factures
model Facture {
  id             String         @id @default(uuid())
  cotisationId   String         @unique
  cotisation     Cotisation     @relation(fields: [cotisationId], references: [id])
  typePaiement   TypePaiement?
  statutPaiement StatutPaiement?
  datePaiement   DateTime?
}

